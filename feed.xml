<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://wudanyang6.github.io/">
    <title>dy_turbo</title>
    <link href="https://wudanyang6.github.io//feed.xml" rel="self" />
    <link href="https://wudanyang6.github.io/" />
    <updated>2024-02-01T07:20:57Z</updated>
    <id>https://wudanyang6.github.io/</id>
        <entry>
            <title>
                🏡 Home dy_turbo
                
            </title>
            <updated>2024-02-01T03:06:06.000Z</updated>
            <id>https://wudanyang6.github.io//</id>
            <content type="html">
                &lt;h1 id=&quot;home-dy-turbo&quot; tabindex=&quot;-1&quot;&gt;🏡 Home dy_turbo&lt;/h1&gt;
&lt;h2 id=&quot;about-me&quot; tabindex=&quot;-1&quot;&gt;About Me&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/card/About%20Me/&quot;&gt;About Me&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;list&quot; tabindex=&quot;-1&quot;&gt;List&lt;/h2&gt;
&lt;ul class=&quot;block-language-dataview&quot;&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/game/%E5%8E%9F%E7%A5%9E%E6%8C%BA%E5%A5%BD%E7%8E%A9/&quot;&gt;原神挺好玩&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-31)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/card/About%20Me/&quot;&gt;About Me&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-30)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/obsidian-things3-today%E6%8F%92%E4%BB%B6/&quot;&gt;obsidian-things3-today插件&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-29)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/c/nginx/epoll%E7%9A%84%E8%BE%B9%E7%BC%98%E8%A7%A6%E5%8F%91%E5%92%8C%E6%B0%B4%E5%B9%B3%E8%A7%A6%E5%8F%91/&quot;&gt;epoll的边缘触发和水平触发&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-28)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/&quot;&gt;🏡 Home dy_turbo&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-28)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/10x%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B7%A5%E4%BD%9C%E6%B3%95/&quot;&gt;10x程序员工作法&lt;/a&gt;:  &lt;em&gt;(created: 2024-1-19)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/Things%20%E5%B7%A5%E4%BD%9C%E6%B5%81/&quot;&gt;Things 工作流&lt;/a&gt;:  &lt;em&gt;(created: 2023-10-9)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#效率&quot;&gt;#效率&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#tools&quot;&gt;#tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/vscode%20vim%20%E7%8A%B6%E6%80%81%E4%B8%8B%E6%98%BE%E7%A4%BA%E6%8F%90%E7%A4%BA/&quot;&gt;vscode vim 状态下显示提示&lt;/a&gt;:  &lt;em&gt;(created: 2023-5-9)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/300%20Code/300%20Leetcode/%E5%85%B7%E4%BD%93%E9%A2%98%E7%9B%AE/leetcode-1137%E7%AC%AC%20N%20%E4%B8%AA%E6%B3%B0%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/&quot;&gt;leetcode-1137第 N 个泰波那契数&lt;/a&gt;:  &lt;em&gt;(created: 2023-2-26)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#leetcode&quot;&gt;#leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/linux/mac-%E5%90%88%E4%B8%8A%E7%9B%96%E5%AD%90%E4%B8%8D%E6%96%AD%E7%BD%91/&quot;&gt;mac-合上盖子不断网&lt;/a&gt;:  &lt;em&gt;(created: 2023-2-3)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/vim%E6%98%BE%E7%A4%BA%E5%88%97%E5%88%86%E9%9A%94%E7%AC%A6/&quot;&gt;vim显示列分隔符&lt;/a&gt;:  &lt;em&gt;(created: 2022-12-7)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/mac/mac-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BF%AB%E6%8D%B7%E9%94%AE/&quot;&gt;mac-自定义快捷键&lt;/a&gt;:  &lt;em&gt;(created: 2022-11-16)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#mac&quot;&gt;#mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/card/GTD/&quot;&gt;GTD&lt;/a&gt;:  &lt;em&gt;(created: 2022-5-5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/%E8%B8%A9%E5%9D%91/js%E8%B6%85%E9%95%BF%E6%95%B0%E5%AD%97%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/&quot;&gt;js超长数字溢出问题&lt;/a&gt;:  &lt;em&gt;(created: 2022-2-26)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#js&quot;&gt;#js&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#联调&quot;&gt;#联调&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#踩坑&quot;&gt;#踩坑&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/card/iso-%E6%97%A5%E6%9C%9F%E8%A1%A8%E7%A4%BA%E6%B3%95/&quot;&gt;iso-日期表示法&lt;/a&gt;:  &lt;em&gt;(created: 2021-7-25)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/card/%E7%BD%91%E7%BB%9C-%E6%9C%80%E5%A4%9A%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%AAa%E7%B1%BB%E3%80%81b%E7%B1%BB%E5%92%8Cc%E7%B1%BB%E7%BD%91%E7%BB%9C%E5%8F%B7/&quot;&gt;网络-最多有多少个a类、b类和c类网络号&lt;/a&gt;:  &lt;em&gt;(created: 2021-5-24)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/600%20Reading/700%20Personal/%E5%A6%82%E4%BD%95%E5%81%9A%E7%9B%91%E6%8E%A7/&quot;&gt;如何做监控&lt;/a&gt;:  &lt;em&gt;(created: 2021-5-7)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/linux/%E6%A0%91%E8%8E%93%E6%B4%BE/ubuntu%20%E6%A0%91%E8%8E%93%E6%B4%BE%E5%90%AF%E5%8A%A8%E6%97%B6%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C/&quot;&gt;ubuntu 树莓派启动时配置网络&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-27)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/c/nginx/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%20nginx%20%E7%9A%84rewrite%E8%AE%B0%E5%BD%95/&quot;&gt;如何查看 nginx 的rewrite记录&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-22)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/c/nginx/nginx%20%E8%BF%9B%E7%A8%8B%E6%A8%A1%E5%9E%8B-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/&quot;&gt;nginx 进程模型-整体架构&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-14)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#nginx&quot;&gt;#nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/output/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/&quot;&gt;文件描述符&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-13)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#文件&quot;&gt;#文件&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#OS&quot;&gt;#OS&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#linux&quot;&gt;#linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/output/%E5%A6%82%E4%BD%95%E8%BF%BD%E6%9F%A5%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98/&quot;&gt;如何追查线上问题&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-12)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#开发经验&quot;&gt;#开发经验&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/linux/linux-man%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/&quot;&gt;linux-man命令使用&lt;/a&gt;:  &lt;em&gt;(created: 2021-4-7)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#linux&quot;&gt;#linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/c/nginx/vscode%20%E8%B0%83%E8%AF%95nginx%E4%BB%A3%E7%A0%81/&quot;&gt;vscode 调试nginx代码&lt;/a&gt;:  &lt;em&gt;(created: 2021-3-25)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/300%20Code/300%20Leetcode/%E6%A8%A1%E6%9D%BF/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%A8%A1%E6%9D%BF/&quot;&gt;滑动窗口模板&lt;/a&gt;:  &lt;em&gt;(created: 2021-3-6)&lt;/em&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#leetcode&quot;&gt;#leetcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

            </content>
            <link href="https://wudanyang6.github.io//" />
        </entry>
        <entry>
            <title>
                文件描述符
                
            </title>
            <updated>2024-01-31T05:28:31.000Z</updated>
            <id>https://wudanyang6.github.io//output/文件描述符/</id>
            <content type="html">
                &lt;h1 id=&quot;什么是文件描述符&quot; tabindex=&quot;-1&quot;&gt;什么是文件描述符&lt;/h1&gt;
&lt;p&gt;对于内核而言，所有打开的文件都通过&lt;code&gt;文件描述符（file descriptor）&lt;/code&gt;引用。通常也写作 &lt;code&gt;fd&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件描述符&lt;/code&gt;是一个非负整数。&lt;/p&gt;
&lt;p&gt;当打开一个现有文件或者创建一个新文件时，内核向进程返回一个&lt;code&gt;文件描述符&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件描述符&lt;/code&gt;是跟&lt;code&gt;进程&lt;/code&gt;相关联的。&lt;/p&gt;
&lt;p&gt;按照惯例，&lt;code&gt;UNIX&lt;/code&gt; 系统将 &lt;code&gt;fd 0&lt;/code&gt; 对应进程的标准输入， &lt;code&gt;fd 1&lt;/code&gt; 对应进程的标准输出， &lt;code&gt;fd 2&lt;/code&gt; 对应进程的标准错误。&lt;/p&gt;
&lt;h1 id=&quot;系统调用中的文件描述符&quot; tabindex=&quot;-1&quot;&gt;系统调用中的文件描述符&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;UNIX&lt;/code&gt; 系统中，一切皆文件，所以一切资源都可以使用文件描述符进程引用。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;open&lt;/code&gt; 系统调用为例&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;man 2 open&lt;/code&gt; 查看系统 &lt;code&gt;man&lt;/code&gt; 手册&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-man&quot;&gt;NAME
     open, openat -- open or create a file for reading or writing

SYNOPSIS
     &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#include&quot;&gt;#include&lt;/a&gt; &amp;lt;fcntl.h&amp;gt;

     int
     open(const char *path, int oflag, ...);

     int
     openat(int fd, const char *path, int oflag, ...);

DESCRIPTION
     The file name specified by path is opened for reading and/or writing,
     as specified by the argument oflag; the file descriptor is returned to
     the calling process.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在简介中有一段话：&lt;code&gt;the file descriptor is returned to the calling process.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;c&lt;/code&gt; 语言打开一个 文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#include&quot;&gt;#include&lt;/a&gt; &amp;lt;stdio.h&amp;gt;
&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#include&quot;&gt;#include&lt;/a&gt; &amp;lt;fcntl.h&amp;gt;
&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#include&quot;&gt;#include&lt;/a&gt; &amp;lt;unistd.h&amp;gt;

int main() {
	int fd;
	fd = open(&amp;quot;tmp.txt&amp;quot;, O_RDONLY);
	printf(&amp;quot;%d&amp;quot;, fd);
	sleep(10);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;会发现，在进程运行时 &lt;code&gt;fd&lt;/code&gt; 目录下，会出现一个描述符 3 指向了 打开的文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ ll /proc/$(ps aux | grep a.out | grep -v grep | awk &#39;{print $2}&#39;)/fd
total 0
lrwx------ 1 ubuntu ubuntu 64 Apr 13 13:48 0 -&amp;gt; /dev/pts/4
lrwx------ 1 ubuntu ubuntu 64 Apr 13 13:48 1 -&amp;gt; /dev/pts/4
lrwx------ 1 ubuntu ubuntu 64 Apr 13 13:48 2 -&amp;gt; /dev/pts/4
lr-x------ 1 ubuntu ubuntu 64 Apr 13 13:48 3 -&amp;gt; /home/ubuntu/mydisk/yangblog/codes/file/tmp.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们可以把这个文件描述符当做参数传递给 &lt;code&gt;read&lt;/code&gt; 或者 &lt;code&gt;write&lt;/code&gt; 等等系统调用。&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//output/文件描述符/" />
        </entry>
        <entry>
            <title>
                如何追查线上问题
                
            </title>
            <updated>2024-01-31T05:26:30.000Z</updated>
            <id>https://wudanyang6.github.io//output/如何追查线上问题/</id>
            <content type="html">
                &lt;p&gt;tags: &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#开发经验&quot;&gt;#开发经验&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;原则&quot; tabindex=&quot;-1&quot;&gt;原则&lt;/h1&gt;
&lt;h2 id=&quot;止损优先&quot; tabindex=&quot;-1&quot;&gt;止损优先&lt;/h2&gt;
&lt;p&gt;不能先追查问题根源， 首先应该&lt;code&gt;止损&lt;/code&gt;，不让问题进一步扩大，&lt;code&gt;代码回滚&lt;/code&gt;、&lt;code&gt;服务降级&lt;/code&gt;等都可以起到止损的效果。&lt;br /&gt;
对于止损有一个比较好的实践，新业务或者重构业务上线时，可以加一个 &lt;code&gt;配置开关 &lt;/code&gt;控制是否启用逻辑，在发现有损时，可以及时关掉业务逻辑，比重新上线要快特别多&lt;/p&gt;
&lt;h2 id=&quot;及时通告&quot; tabindex=&quot;-1&quot;&gt;及时通告&lt;/h2&gt;
&lt;p&gt;在问题发生之后，要及时对处理问题的过程进行&lt;code&gt;通告&lt;/code&gt;。特别是应对线上有损的问题时，更应该及时通告。在内部群中，简单描述一下问题与可能的原因，处理的进度。而在外部群里，可以只说一下处理的进度。如果有必要，可以将问题上诉到领导，如果还解决不了问题，可以逐级继续上诉。&lt;/p&gt;
&lt;h1 id=&quot;追查问题的方法&quot; tabindex=&quot;-1&quot;&gt;追查问题的方法&lt;/h1&gt;
&lt;h2 id=&quot;逻辑方法:&quot; tabindex=&quot;-1&quot;&gt;逻辑方法:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;先收集&lt;code&gt;现象&lt;/code&gt;：业务报错、线上报错日志等&lt;br /&gt;
对紧急的问题来说，需要对线上业务、服务器等非常熟悉，才能迅速收集到有用的报错信息。&lt;/li&gt;
&lt;li&gt;针对现象假设&lt;code&gt;原因&lt;/code&gt;：
&lt;ol&gt;
&lt;li&gt;常见问题依据追查手册&lt;/li&gt;
&lt;li&gt;其他问题保持思路开放，大胆假设&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;是否&lt;code&gt;有损&lt;/code&gt;的判断：&lt;br /&gt;
根据现象假设出可能的原因，判断是否是有损的，如果是有损的问题，参考 &lt;strong&gt;止损优先&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;质疑&lt;/code&gt;所有数据：&lt;br /&gt;
各个数据、监控系统等的有效性也需要质疑，不能完全相信，需要小心求证&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;知识准备&quot; tabindex=&quot;-1&quot;&gt;知识准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;对线上各种&lt;code&gt;日志&lt;/code&gt;的熟悉，从日志中能看到具体的问题，比如 nginx 日志 php 日志等&lt;/li&gt;
&lt;li&gt;对线上的各种&lt;code&gt;配置&lt;/code&gt;更要做到心中有数&lt;/li&gt;
&lt;li&gt;对&lt;code&gt;细节&lt;/code&gt;的追查，每次都更细一些，这样才能获得更多的信息&lt;/li&gt;
&lt;li&gt;计算机&lt;code&gt;基本功&lt;/code&gt;，有时问题追查不下去，不是没有线索，而是追查到了一个未知的领域，没有相关的知识，无法追查&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;总结经验&quot; tabindex=&quot;-1&quot;&gt;总结经验&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;成熟的方法落地成&lt;code&gt;工具&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对问题的追查形成&lt;code&gt;文档&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;问题解决之后&quot; tabindex=&quot;-1&quot;&gt;问题解决之后&lt;/h1&gt;
&lt;p&gt;如果问题解决之后，我们就不再跟进了，那么我们就沦为了解决问题的工具，问题也随之越来越多，解决不完。&lt;br /&gt;
那么，我们可以通过思考以下几点来提升自己&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线上是否恢复了正常？（&lt;code&gt;最基本的&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;问题的原因是什么？（&lt;code&gt;落到追查文档&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;通过什么手段恢复的？（&lt;code&gt;解决方案&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;怎么可以避免下次再次出现问题？（&lt;code&gt;防患未然&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;除了此次出现的问题，会不会有其他的问题出现（&lt;code&gt;举一反三&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;出现此类问题是否是架构问题造成的？（&lt;code&gt;根本原因&lt;/code&gt;）&lt;/li&gt;
&lt;/ol&gt;

            </content>
            <link href="https://wudanyang6.github.io//output/如何追查线上问题/" />
        </entry>
        <entry>
            <title>
                原神挺好玩
                
            </title>
            <updated>2024-01-31T05:18:06.000Z</updated>
            <id>https://wudanyang6.github.io//game/原神挺好玩/</id>
            <content type="html">
                &lt;h1 id=&quot;原神挺好玩&quot; tabindex=&quot;-1&quot;&gt;原神挺好玩&lt;/h1&gt;
&lt;p&gt;最近游戏一直在玩原神，一个开放的大世界。主线剧情刚刚做完，确实是我想象中的角色扮演（RPG）游戏。&lt;/p&gt;
&lt;p&gt;记得高中在塞班手机上玩的一款RPG游戏，一个周末都在刷怪。后来重新练了个号，结果跟大师傅打架的时候，他的70级宠物不知道为什么变成我的了。我就带着一个70级将近满级的宠物一路过关斩将玩通关了。&lt;/p&gt;
&lt;p&gt;原神里面我自己感觉可玩的点有几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;角色都很二次元，都是按照动漫里面的角色画出来的，二次元的估计会很喜欢。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剧情比较代入，某些剧情需要努力打怪，不过主线剧情并不是很难。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大世界地图非常大，如果不是有传送节点估计跑图都得跑断腿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大世界里面有很多宝箱，有些宝箱需要解密之后才能获得，不过这些宝箱都是一次性的，我在蒙德、璃月、稻妻的探索度最高才到 50% ，所以也可见大世界有多大东西有多丰富。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支线剧情也很丰富多彩，比如我就特别喜欢璃月里面的一个支线剧情《神女劈观》，并且剧情最后有一首歌，大家可以先听一下。不过没有了解剧情之前听这首歌触动应该不是很大，还是具体体验一下剧情再说。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后一点，原神不花钱氪金也可以玩的很舒服，每天做做每日任务，开开宝箱，欣赏欣赏美景，然后读一读角色的背景故事。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对了，游戏社区里的前辈忠告，当深渊不存在，能打到哪里就打到哪里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/clop_2024-01-31_36.png&quot; alt=&quot;../attachs/clop_2024-01-31_36.png&quot; /&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//game/原神挺好玩/" />
        </entry>
        <entry>
            <title>
                网络-最多有多少个a类、b类和c类网络号
                
            </title>
            <updated>2024-02-01T05:02:45.000Z</updated>
            <id>https://wudanyang6.github.io//card/网络-最多有多少个a类、b类和c类网络号/</id>
            <content type="html">
                &lt;p&gt;在IPv4地址体系中，网络被分为4个等级，分别是A，B，C和D类。对于A、B、C类，其数量如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A类：128个（范围是0.0.0.0到127.255.255.255，但0.0.0.0和127.0.0.0通常分别用作默认路由和本地回环地址，所以不包括在内。）&lt;/li&gt;
&lt;li&gt;B类：16,384个（范围是 128.0.0.0 到 191.255.255.255）&lt;/li&gt;
&lt;li&gt;C类：2,097,152个（范围是 192.0.0.0 到 223.255.255.255）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请注意，上述分类是根据原始的IPv4地址分类来计算的。然而，由于IP地址的枯竭，现在的实际网络环境中，通常在IP地址分配上使用了子网划分，CIDR，私有地址等现代网络技术，因此实际的可用网络数量会因子网划分、私有地址使用等因素而有所变化。&lt;/p&gt;
&lt;p&gt;D类 IP 地址是多播（Multicast）地址，其范围是 224.0.0.0 到 239.255.255.255。&lt;/p&gt;
&lt;p&gt;所以，D类网络（多播地址）总共有 (239-224+1) x (2^24) = 268,435,456 个。&lt;/p&gt;
&lt;p&gt;但是，有些特定的地址在D类中是已经被保留或特殊用途的，例如 224.0.0.0 - 224.0.0.255 是被保留的用于本地网络的多播地址。&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/a5534789/article/details/50118857#:~:text=%E2%80%9C0%E2%80%9D%E5%81%9A%E4%B8%BA%E7%BD%91%E7%BB%9C%E5%8F%B7,%E7%BD%91%E6%AE%B5%E4%B8%BA1%E2%80%94126.&amp;amp;text=224%3D412%3D166%3D2563,%E6%95%B0%E5%BA%94%E8%AF%A5%E6%98%AF16777214%E4%B8%AA%E3%80%82&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://blog.csdn.net/a5534789/article/details/50118857#:~:text=“0”做为网络号,网段为1—126.&amp;amp;text=224%3D412%3D166%3D2563,数应该是16777214个。&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//card/网络-最多有多少个a类、b类和c类网络号/" />
        </entry>
        <entry>
            <title>
                iso-日期表示法
                
            </title>
            <updated>2024-02-01T05:03:15.000Z</updated>
            <id>https://wudanyang6.github.io//card/iso-日期表示法/</id>
            <content type="html">
                &lt;p&gt;&lt;strong&gt;国际标准化组织的日期时间表示法&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;日期时间点表示法&quot; tabindex=&quot;-1&quot;&gt;日期时间点表示法&lt;/h1&gt;
&lt;h2 id=&quot;零时区&quot; tabindex=&quot;-1&quot;&gt;零时区&lt;/h2&gt;
&lt;p&gt;在最后加上大写 的 Z&lt;br /&gt;
2004-05-03T17:30:08Z&lt;/p&gt;
&lt;h2 id=&quot;其他时区&quot; tabindex=&quot;-1&quot;&gt;其他时区&lt;/h2&gt;
&lt;p&gt;合并表示时，要在时间前面加一大写字母T，如要表示东八区时间2004年5月3日下午5点30分8秒，可以写成&lt;strong&gt;2004-05-03T17:30:08+08:00&lt;/strong&gt;或&lt;strong&gt;20040503T173008+08&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;时间点表示法&quot; tabindex=&quot;-1&quot;&gt;时间点表示法&lt;/h1&gt;
&lt;p&gt;首字母为 P，其他字母为年月日时分秒，中间加上 T&lt;br /&gt;
&lt;strong&gt;P1Y3M5DT6H7M30S&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;时间间隔表示法&quot; tabindex=&quot;-1&quot;&gt;时间间隔表示法&lt;/h1&gt;
&lt;h2 id=&quot;从一个时间开始，到另一个时间结束&quot; tabindex=&quot;-1&quot;&gt;从一个时间开始，到另一个时间结束&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;19850412/19860101&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;从指定时间开始持续一段时间&quot; tabindex=&quot;-1&quot;&gt;从指定时间开始持续一段时间&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;19850412/P6M&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;循环时间表示法&quot; tabindex=&quot;-1&quot;&gt;循环时间表示法&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;R【循环次数】【/开始时间】/时间间隔【/结束时间】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从2004年5月6日北京时间下午1点起时间间隔半年零5天3小时循环，且循环3次&lt;br /&gt;
&lt;strong&gt;R3/20040506T130000+08/P0Y6M5DT3H0M0S&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;以1年2个月为循环间隔，无限次循环，最后循环终止于2025年1月1日&lt;br /&gt;
&lt;strong&gt;R/P1Y2M/20250101&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;div style=&quot;display: block; position: relative; width: 100%; height: 0px; --aspect-ratio:9/16; padding-bottom: calc(var(--aspect-ratio) * 100%);&quot;&gt;&lt;iframe src=&quot;https://zh.wikipedia.org/wiki/ISO_8601&quot; allow=&quot;fullscreen&quot; style=&quot;position: absolute; top: 0px; left: 0px; height: 100%; width: 100%;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
            </content>
            <link href="https://wudanyang6.github.io//card/iso-日期表示法/" />
        </entry>
        <entry>
            <title>
                GTD
                
            </title>
            <updated>2024-01-31T05:28:42.000Z</updated>
            <id>https://wudanyang6.github.io//card/GTD/</id>
            <content type="html">
                &lt;ol&gt;
&lt;li&gt;把事情做好&lt;/li&gt;
&lt;li&gt;执行时是拿结果engage（而不是仅仅去 exec）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://topbook.cc/course/detail/153&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://topbook.cc/course/detail/153&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要思想：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;捕获&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020220509232211.png&quot; alt=&quot;Pasted image 20220509232211.png&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1wE411176Q?p=6&amp;amp;spm_id_from=333.880.my_history.page.click&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;bilibili教程&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//card/GTD/" />
        </entry>
        <entry>
            <title>
                About Me
                
            </title>
            <updated>2024-01-31T05:28:44.000Z</updated>
            <id>https://wudanyang6.github.io//card/About Me/</id>
            <content type="html">
                &lt;h1 id=&quot;about-me&quot; tabindex=&quot;-1&quot;&gt;About Me&lt;/h1&gt;
&lt;p&gt;千里之行，始于足下&lt;/p&gt;
&lt;h2 id=&quot;leetcode&quot; tabindex=&quot;-1&quot;&gt;leetcode&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/u/wudanyang/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;leetcode 个人主页&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;github&quot; tabindex=&quot;-1&quot;&gt;github&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/wudanyang6&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;github 个人主页&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;music&quot; tabindex=&quot;-1&quot;&gt;music&lt;/h2&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;650px&quot; src=&quot;https://music.163.com/playlist?id=13022777&amp;userid=16553655&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;false&quot;&gt; &lt;/iframe&gt;

            </content>
            <link href="https://wudanyang6.github.io//card/About Me/" />
        </entry>
        <entry>
            <title>
                如何做监控
                
            </title>
            <updated>2024-01-31T05:35:08.000Z</updated>
            <id>https://wudanyang6.github.io//600 Reading/700 Personal/如何做监控/</id>
            <content type="html">
                &lt;h1 id=&quot;如何做监控&quot; tabindex=&quot;-1&quot;&gt;如何做监控&lt;/h1&gt;
&lt;p&gt;监控：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是监控？
&lt;ol&gt;
&lt;li&gt;对&lt;em&gt;线上质量&lt;/em&gt;的一个实时检查&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;重要性
&lt;ol&gt;
&lt;li&gt;发现线上问题（早于用户）&lt;/li&gt;
&lt;li&gt;快速止损、定位&lt;/li&gt;
&lt;li&gt;及时发现隐藏的问题，指导策略优化&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;如何做好监控？
&lt;ol&gt;
&lt;li&gt;监控的流程及内容
&lt;ol&gt;
&lt;li&gt;监控需求提出&lt;/li&gt;
&lt;li&gt;监控需求开发&lt;/li&gt;
&lt;li&gt;监控需求测试&lt;/li&gt;
&lt;li&gt;监控指标确认&lt;/li&gt;
&lt;li&gt;监控报警添加&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;确认监控内容
&lt;ol&gt;
&lt;li&gt;新功能添加监控&lt;/li&gt;
&lt;li&gt;补充监控&lt;/li&gt;
&lt;li&gt;围绕
&lt;ol&gt;
&lt;li&gt;系统正确性&lt;/li&gt;
&lt;li&gt;系统异常&lt;/li&gt;
&lt;li&gt;异常定位&lt;/li&gt;
&lt;li&gt;隐藏问题指导策略&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;监控数据获取
&lt;ol&gt;
&lt;li&gt;打点数据&lt;/li&gt;
&lt;li&gt;日志数据&lt;/li&gt;
&lt;li&gt;数据库数据&lt;/li&gt;
&lt;li&gt;redis 数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;监控报警添加
&lt;ol&gt;
&lt;li&gt;监控可视化&lt;/li&gt;
&lt;li&gt;确定触发报警策略&lt;/li&gt;
&lt;li&gt;确定报警频率&lt;/li&gt;
&lt;li&gt;确定报警接收人&lt;/li&gt;
&lt;li&gt;配置监控&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;监控处理
&lt;ol&gt;
&lt;li&gt;收到报警&lt;/li&gt;
&lt;li&gt;问题跟进&lt;/li&gt;
&lt;li&gt;问题周知&lt;/li&gt;
&lt;li&gt;问题处理&lt;/li&gt;
&lt;li&gt;定损&lt;/li&gt;
&lt;li&gt;复盘 &amp;amp; casestudy&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;监控报警优化
&lt;ol&gt;
&lt;li&gt;漏报
&lt;ol&gt;
&lt;li&gt;不同报警类型&lt;/li&gt;
&lt;li&gt;突升突降代替固定阈值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;无效报警太多（准确率）
&lt;ol&gt;
&lt;li&gt;准确性提升
&lt;ol&gt;
&lt;li&gt;放大时间窗口，屏蔽预期内的单点抖动&lt;/li&gt;
&lt;li&gt;工作日、节假日不同阈值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;推送方式优化
&lt;ol&gt;
&lt;li&gt;连续失败&lt;/li&gt;
&lt;li&gt;通知间隔&lt;/li&gt;
&lt;li&gt;通知依赖&lt;/li&gt;
&lt;li&gt;不同方式报警（短信、电话）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;报警处理不及时
&lt;ol&gt;
&lt;li&gt;自愈脚本等&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;问题定位
&lt;ol&gt;
&lt;li&gt;流量分析
&lt;ol&gt;
&lt;li&gt;流量细分
&lt;ol&gt;
&lt;li&gt;行业&lt;/li&gt;
&lt;li&gt;地域&lt;/li&gt;
&lt;li&gt;机房&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;系统分析
&lt;ol&gt;
&lt;li&gt;线上出现报错、fatal、pvlost&lt;/li&gt;
&lt;li&gt;例行上线功能影响&lt;/li&gt;
&lt;li&gt;数据变更&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://wudanyang6.github.io/404&quot; target=&quot;&quot;&gt;600 Reading/700 Personal/如何追查线上问题&lt;/a&gt;&lt;br /&gt;
先通报、再止损、再定位&lt;br /&gt;
最后修复&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//600 Reading/700 Personal/如何做监控/" />
        </entry>
        <entry>
            <title>
                滑动窗口模板
                
            </title>
            <updated>2024-02-01T07:17:30.000Z</updated>
            <id>https://wudanyang6.github.io//300 Code/300 Leetcode/模板/滑动窗口模板/</id>
            <content type="html">
                &lt;h1 id=&quot;滑动窗口模板&quot; tabindex=&quot;-1&quot;&gt;滑动窗口模板&lt;/h1&gt;
&lt;p&gt;以 &lt;a href=&quot;https://leetcode-cn.com/problems/grumpy-bookstore-owner/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;1052. 爱生气的书店老板&lt;/a&gt; 为例&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;class Solution {

    /**
     * @param Integer[] $customers
     * @param Integer[] $grumpy
     * @param Integer $X
     * @return Integer
     */
    function maxSatisfied($customers, $grumpy, $X) {
        if (empty($customers)) {
            return 0;
        }

        // 1. 计算初始状态： 不压抑的时候，最大的满意人数
        $maxSat = 0;
        foreach ($grumpy as $key =&amp;gt; $g) {
            if ($g == 0) {
                $maxSat += $customers[$key];
            }
        }
		
		// 1.1 初始化左右指针位置
        $len = count($customers);
        $left = $right = 0;
        $curSat = $maxSat;
		
        // 2. 滑窗具体代码
        // 2.1 右指针一直往右做
        while ($right &amp;lt; $len) {
            $span = $right - $left + 1;

            // 2.1 直到遇到临界条件之后，左指针往右走，直到满足临界条件
            if ($span &amp;gt; $X) {
                if ($grumpy[$left]) {
                    $curSat -= $customers[$left];
                }
                $left ++;
            }

            // 计算当前窗口的数值
            if ($grumpy[$right]) {
                $curSat += $customers[$right];
            }
			
            // 最终结果比较
            $maxSat = max($curSat, $maxSat);
            $right++;
        }

        return $maxSat;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;多看几个题解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;lc 的官方题解： &lt;a href=&quot;https://leetcode-cn.com/problems/grumpy-bookstore-owner/solution/ai-sheng-qi-de-shu-dian-lao-ban-by-leetc-dloq/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;爱生气的书店老板&lt;/a&gt;&lt;br /&gt;
一般官方题解的思路会非常详细，建议多看几遍&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/grumpy-bookstore-owner/solution/yong-mi-mi-ji-qiao-wan-liu-zhu-zui-duo-d-py41/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;用「秘密技巧」挽留住最多的原本因为生气而被赶走的顾客&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

            </content>
            <link href="https://wudanyang6.github.io//300 Code/300 Leetcode/模板/滑动窗口模板/" />
        </entry>
        <entry>
            <title>
                leetcode-1137第 N 个泰波那契数
                
            </title>
            <updated>2024-01-31T05:28:41.000Z</updated>
            <id>https://wudanyang6.github.io//300 Code/300 Leetcode/具体题目/leetcode-1137第 N 个泰波那契数/</id>
            <content type="html">
                &lt;h1 id=&quot;题目&quot; tabindex=&quot;-1&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/n-th-tribonacci-number/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;1137. 第 N 个泰波那契数&lt;/a&gt;&lt;br /&gt;
这个跟斐波那契好像是一样的，一模一样&lt;/p&gt;
&lt;h1 id=&quot;解法&quot; tabindex=&quot;-1&quot;&gt;解法&lt;/h1&gt;
&lt;p&gt;跟斐波纳契数列一样的解法&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;class Solution {

    /**
     * @param Integer $n
     * @return Integer
     */
    function tribonacci($n) {
        if ($n &amp;lt;= 0) {
            return 0;
        }
        
        $retArr = [0,1,1];
        for ($i = 3; $i &amp;lt;= $n; $i++) {
            $retArr[$i] = $retArr[$i-1] + $retArr[$i-2] + $retArr[$i-3];
        }

        return $retArr[$n];
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;

            </content>
            <link href="https://wudanyang6.github.io//300 Code/300 Leetcode/具体题目/leetcode-1137第 N 个泰波那契数/" />
        </entry>
        <entry>
            <title>
                vscode vim 状态下显示提示
                
            </title>
            <updated>2024-01-31T05:34:35.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/vscode vim 状态下显示提示/</id>
            <content type="html">
                &lt;h1 id=&quot;vscode-vim&quot; tabindex=&quot;-1&quot;&gt;vscode vim 状态下显示提示&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/32279384/keyboard-shortcut-to-show-hover-tooltip#:~:text=The%20trick%20is%20timing.,CMD%2FCtrl%20%2B%20press%20K.&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;visual studio code - Keyboard shortcut to show hover tooltip - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&#39;re using the VSCodeVim plugin, you can use &lt;code&gt;gh&lt;/code&gt; to show the tooltip. &lt;a href=&quot;https://stackoverflow.com/a/66860229&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/vscode vim 状态下显示提示/" />
        </entry>
        <entry>
            <title>
                vim显示列分隔符
                
            </title>
            <updated>2024-01-31T05:32:42.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/vim显示列分隔符/</id>
            <content type="html">
                &lt;h1 id=&quot;vim&quot; tabindex=&quot;-1&quot;&gt;vim显示列分隔符&lt;/h1&gt;
&lt;h2 id=&quot;内容&quot; tabindex=&quot;-1&quot;&gt;内容&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;:set list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示 &lt;code&gt;tab&lt;/code&gt; 和结尾符号 &lt;code&gt;$&lt;/code&gt;，不显示开头的 &lt;code&gt;^&lt;/code&gt; 符号&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020221207155541.png&quot; alt=&quot;../attachs/Pasted image 20221207155541.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h2&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/vim显示列分隔符/" />
        </entry>
        <entry>
            <title>
                obsidian-things3-today插件
                
            </title>
            <updated>2024-01-31T05:28:27.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/obsidian-things3-today插件/</id>
            <content type="html">
                &lt;h1 id=&quot;obsidian-things3-today&quot; tabindex=&quot;-1&quot;&gt;obsidian-things3-today插件&lt;/h1&gt;
&lt;p&gt;把之前的插件重新搞了搞，把乱七八糟的东西去掉了，然后提交了obsidian插件库&lt;/p&gt;
&lt;p&gt;正在等着被review： &lt;a href=&quot;https://github.com/obsidianmd/obsidian-releases/pull/2997&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://github.com/obsidianmd/obsidian-releases/pull/2997&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新录了一个gif：&lt;/p&gt;
&lt;p&gt;图中可以看到和things3的Today列表联动还算是顺畅&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/things3-today-showcase.gif&quot; alt=&quot;things3-today-showcase.gif&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h2&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/obsidian-things3-today插件/" />
        </entry>
        <entry>
            <title>
                mac-自定义快捷键
                
            </title>
            <updated>2024-02-01T05:14:57.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/mac/mac-自定义快捷键/</id>
            <content type="html">
                &lt;h1 id=&quot;mac&quot; tabindex=&quot;-1&quot;&gt;mac-自定义快捷键&lt;/h1&gt;
&lt;h2 id=&quot;内容&quot; tabindex=&quot;-1&quot;&gt;内容&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020221116142140.png&quot; alt=&quot;Pasted image 20221116142140.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h2&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/mac/mac-自定义快捷键/" />
        </entry>
        <entry>
            <title>
                Things 工作流
                
            </title>
            <updated>2024-02-01T05:07:15.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/Things 工作流/</id>
            <content type="html">
                &lt;h1 id=&quot;things&quot; tabindex=&quot;-1&quot;&gt;Things 工作流&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;有任何事情都记录下来，心中的任何想法都不要放过&lt;/li&gt;
&lt;li&gt;定时整理收件箱（需要保证整理完收件箱之后，任务都是可执行的）
&lt;ol&gt;
&lt;li&gt;如果有事情2分钟就能解决，那么直接去做，属于小事情&lt;/li&gt;
&lt;li&gt;如果需要15-30分钟，则标记上标签 ![](/img/user/card/Pasted image 20231009172220.png)&lt;/li&gt;
&lt;li&gt;如果需要1小时以上，就将任务设置成项目
&lt;ol&gt;
&lt;li&gt;做一次任务分解，分解成小任务，小任务以30分钟以内完成最好&lt;/li&gt;
&lt;li&gt;如果分解项目本身也需要很多时间，那么在项目里面加一个【分解任务】的事项&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;根据时间，选取任务进行处理，打开 &lt;code&gt;Session&lt;/code&gt; 软件进行专注于做事，太喜欢 Session 的页面了，从而订阅了 setapp 使用  &lt;img src=&quot;https://wudanyang6.github.io/img/user/card/Pasted%20image%2020231107224028.png&quot; alt=&quot;Pasted image 20231107224028.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了让Things工作流更顺畅，我做了一个obsidian插件： &lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/101%20Tools/obsidian-things3-today%E6%8F%92%E4%BB%B6/&quot;&gt;obsidian-things3-today插件&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/Things 工作流/" />
        </entry>
        <entry>
            <title>
                10x程序员工作法
                
            </title>
            <updated>2024-01-31T15:50:43.000Z</updated>
            <id>https://wudanyang6.github.io//101 Tools/10x程序员工作法/</id>
            <content type="html">
                &lt;h1 id=&quot;10x&quot; tabindex=&quot;-1&quot;&gt;10x程序员工作法&lt;/h1&gt;
&lt;h2 id=&quot;content&quot; tabindex=&quot;-1&quot;&gt;Content&lt;/h2&gt;
&lt;h3 id=&quot;以终为始&quot; tabindex=&quot;-1&quot;&gt;以终为始&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;倒着想&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DoD（Definition of Done 完成的定义）
&lt;ul&gt;
&lt;li&gt;弥合差异&lt;/li&gt;
&lt;li&gt;个人的DoD，团队的DoD&lt;/li&gt;
&lt;li&gt;DoD 是一个思维模式，是一种尽可能消除不确定性，达成共识的方式。&lt;/li&gt;
&lt;li&gt;DoD 让我们能够在一开始就把“终”清晰地定义出来。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在做任何事之前，先定义完成的标准。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用户故事（User Story）
&lt;ul&gt;
&lt;li&gt;标题&lt;/li&gt;
&lt;li&gt;概述&lt;/li&gt;
&lt;li&gt;详述&lt;/li&gt;
&lt;li&gt;验收标准&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在做任何需求或任务之前，先定好验收标准。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;持续集成
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;尽早提交代码去集成。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精益创业：产品经理不靠谱，你该怎么办？&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;MVP 最小可行产品&lt;/li&gt;
&lt;li&gt;比较早成型的面向不确定创造新事物的方法论是精益创业，它提出了“开发（build）-测量（measure）-认知（learn）”这样一个反馈循环和最小可行产品的概念。&lt;br /&gt;
如何试出来经过验证的认知 &lt;a href=&quot;https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/10x%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B7%A5%E4%BD%9C%E6%B3%95/assets/cd2bc0138e5d40e9acfaeb9c974320be.jpg&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://learn.lianglianglee.com/专栏/10x程序员工作法/assets/cd2bc0138e5d40e9acfaeb9c974320be.jpg&lt;/a&gt; &lt;img src=&quot;https://wudanyang6.github.io/img/user/Paste%20image%201705900815474image.png&quot; alt=&quot;Paste image 1705900815474image.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;精益创业提供给我们的是一个做产品的思考框架，我们能够接触到的大多数产品都可以放在这个框架内思考。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;默认所有需求都不做，直到弄清楚为什么要做这件事。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;上下文
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;扩大自己工作的上下文，别把自己局限在一个“程序员”的角色上。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在动手做一件事之前，先推演一番。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;数字衡量
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;从数字中发现问题，让系统更稳定。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;问一下自己，我的工作是不是可以用数字衡量。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开发前的准备
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设计你的迭代0清单，给自己的项目做体检。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;任务分解&quot; tabindex=&quot;-1&quot;&gt;任务分解&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动手做一个工作之前，请先对它进行任务分解。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;测试
&lt;ul&gt;
&lt;li&gt;测试模型：冰淇淋蛋卷： &lt;img src=&quot;https://wudanyang6.github.io/img/user/card/1ac9ed05304d4009a1064dae764f1592.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
&lt;li&gt;金字塔模型：&lt;img src=&quot;https://wudanyang6.github.io/img/user/card/28d88fea0c894ba19321c844fe4d31ab.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;小事反馈周期短，而大事反馈周期长。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多写单元测试。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我们应该编写可测的代码。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;将任务拆小，越小越好。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按照完整实现一个需求的顺序去安排分解出来的任务。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;什么是好的测试
&lt;ul&gt;
&lt;li&gt;怎么衡量测试是否做好了呢？有一个标准：A-TRIP，这是五个单词的缩写，分别是Automatic（自动化）、Thorough（全面）、Repeatable（可重复的）、Independent（独立的）和 Professional（专业的）。&lt;/li&gt;
&lt;li&gt;要想写好测试，就要写简单的测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;需求分解
&lt;ul&gt;
&lt;li&gt;需求估算-大小标准&lt;/li&gt;
&lt;li&gt;发现大的需求，一个迭代内做不完&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;想要管理好需求，先把需求拆小。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;尽量做最重要的事。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;做好产品开发，最可行的方式是采用 MVP。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;沟通反馈&quot; tabindex=&quot;-1&quot;&gt;沟通反馈&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;对齐？信息对齐&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过沟通反馈，不断升级自己的编解码能力。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用业务的语言写代码。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多面对面沟通，少开会。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多尝试用可视化的方式进行沟通。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定期复盘，找准问题根因，不断改善。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多走近用户。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事情往前做，有问题尽早暴露。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;金字塔原理 &lt;img src=&quot;https://learn.lianglianglee.com/%e4%b8%93%e6%a0%8f/10x%e7%a8%8b%e5%ba%8f%e5%91%98%e5%b7%a5%e4%bd%9c%e6%b3%95/assets/afdfd15d142d4732a2b6b87f4dae4450.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多输出，让知识更有结构。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;自动化&quot; tabindex=&quot;-1&quot;&gt;自动化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;请谨慎地将工作自动化。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有体系地学习运维知识。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;将验收测试自动化。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;把函数写短。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;s&gt;&lt;strong&gt;构建好你的领域模型。&lt;/strong&gt;&lt;/s&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用简单技术解决问题，直到问题变复杂。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;学习领域驱动设计。再去拆分微服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;综合&quot; tabindex=&quot;-1&quot;&gt;综合&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;了解一个项目，从大图景开始。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;业务&lt;/li&gt;
&lt;li&gt;技术&lt;/li&gt;
&lt;li&gt;团队运作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;小步改造遗留系统，不要回到老路上。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;什么叫 T 型人？简言之，一专多能。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在学习区工作和成长。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h2&gt;
&lt;h3 id=&quot;a-href-https-learn-lianglianglee-com-e4-b8-93-e6-a0-8f-10x-e7-a8-8b-e5-ba-8f-e5-91-98-e5-b7-a5-e4-bd-9c-e6-b3-95-39-20-e9-9d-a2-e5-af-b9-e9-81-97-e7-95-99-e7-b3-bb-e7-bb-9f-ef-bc-8c-e4-bd-a0-e5-ba-94-e8-af-a5-e8-bf-99-e6-a0-b7-e5-81-9a-md-target-blank-class-external-link-39-a&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://learn.lianglianglee.com/%e4%b8%93%e6%a0%8f/10x%e7%a8%8b%e5%ba%8f%e5%91%98%e5%b7%a5%e4%bd%9c%e6%b3%95/39%20%e9%9d%a2%e5%af%b9%e9%81%97%e7%95%99%e7%b3%bb%e7%bb%9f%ef%bc%8c%e4%bd%a0%e5%ba%94%e8%af%a5%e8%bf%99%e6%a0%b7%e5%81%9a.md&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;39 面对遗留系统，你应该这样做&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;a-href-https-learn-lianglianglee-com-e4-b8-93-e6-a0-8-f-10x-e7-a8-8-b-e5-ba-8-f-e5-91-98-e5-b7-a5-e4-bd-9-c-e6-b3-95-e6-80-bb-e5-a4-8-d-e4-b9-a0-20-e9-87-8-d-e6-96-b0-e6-9-d-a5-e2-80-9-c-e7-9-c-8-b-e4-b9-a6-e2-80-9-d-md-target-blank-class-external-link-https-learn-lianglianglee-com-10x-md-a&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/10x%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B7%A5%E4%BD%9C%E6%B3%95/%E6%80%BB%E5%A4%8D%E4%B9%A0%20%E9%87%8D%E6%96%B0%E6%9D%A5%E2%80%9C%E7%9C%8B%E4%B9%A6%E2%80%9D.md&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://learn.lianglianglee.com/专栏/10x程序员工作法/总复习 重新来“看书”.md&lt;/a&gt;&lt;/h3&gt;

            </content>
            <link href="https://wudanyang6.github.io//101 Tools/10x程序员工作法/" />
        </entry>
        <entry>
            <title>
                js超长数字溢出问题
                
            </title>
            <updated>2024-01-31T05:28:37.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/踩坑/js超长数字溢出问题/</id>
            <content type="html">
                &lt;p&gt;tags: &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#js&quot;&gt;#js&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#联调&quot;&gt;#联调&lt;/a&gt; &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#踩坑&quot;&gt;#踩坑&lt;/a&gt;  &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wudanyang/p/15940613.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://www.cnblogs.com/wudanyang/p/15940613.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;现象&quot; tabindex=&quot;-1&quot;&gt;现象&lt;/h1&gt;
&lt;p&gt;之前遇到过的一个问题&lt;br /&gt;
接口要返回给前端（js）一个比较长的数字：&lt;code&gt;759830849237899244&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;看了接口返回是没问题的，但是前端拿着数字去取详情的时候，传过来的是另外一个数字：&lt;code&gt;759830849237899300&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一比较，看起来是数字被转换了&lt;/p&gt;
&lt;p&gt;&lt;code&gt;759830849237899244&lt;/code&gt; =&amp;gt; &lt;code&gt;759830849237899300&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在前端控制台执行一下：&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020220226212150.png&quot; alt=&quot;Pasted image 20220226212150.png&quot; /&gt;&lt;br /&gt;
果然被转成了另外一个数字，而且看规律很像是后三位被上取整了&lt;/p&gt;
&lt;h1 id=&quot;原理&quot; tabindex=&quot;-1&quot;&gt;原理&lt;/h1&gt;
&lt;p&gt;后来了解到js会将数字按照下图方式切分后表示数字，以至于最高表示的数字只能到 &lt;code&gt;9007199254740991&lt;/code&gt;  比这个数字更大的数字就会发生进位溢出&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020201109201831.png&quot; alt=&quot;Pasted image 20201109201831.png&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;解决方案&quot; tabindex=&quot;-1&quot;&gt;解决方案&lt;/h1&gt;
&lt;p&gt;解决方案很好办，那就是将数字转成字符串，只要前端不强转成数字，那就不会出问题&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/iShot2022-02-26%2021.46.09.jpg&quot; alt=&quot;iShot2022-02-26 21.46.09.jpg&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考文档&quot; tabindex=&quot;-1&quot;&gt;参考文档&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1477816&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;JSON Bigint 大数精度丢失的背后&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10631494/json-parse-parses-converts-big-numbers-incorrectly&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;JSON.parse parses / converts big numbers incorrectly&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/踩坑/js超长数字溢出问题/" />
        </entry>
        <entry>
            <title>
                ubuntu 树莓派启动时配置网络
                
            </title>
            <updated>2024-01-31T05:28:35.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/linux/树莓派/ubuntu 树莓派启动时配置网络/</id>
            <content type="html">
                &lt;h1 id=&quot;code-ubuntu-code&quot; tabindex=&quot;-1&quot;&gt;树莓派 &lt;code&gt;ubuntu&lt;/code&gt; 配置网络&lt;/h1&gt;
&lt;p&gt;树莓派现在可以安装很多操作系统，其中 &lt;code&gt;ubuntu&lt;/code&gt; 也提供了树莓派版本，因为对 &lt;code&gt;ubuntu&lt;/code&gt; 更加熟悉，所以就往 &lt;code&gt;SD&lt;/code&gt; 卡中烧录了 &lt;code&gt;ubuntu&lt;/code&gt; 的 &lt;code&gt;20.04 lts 64位&lt;/code&gt; 版本。&lt;a href=&quot;https://www.raspberrypi.org/software/operating-systems/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;这里有可供选择的操作系统。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单提一嘴烧录操作系统到 &lt;code&gt;SD&lt;/code&gt; 卡上面的方法，树莓派提供了一个&lt;a href=&quot;https://www.raspberrypi.org/software/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;傻瓜式的软件&lt;/a&gt;给大家使用，直接打开之后选择系统，就可以烧录了，烧录过程大概会有几分钟。&lt;/p&gt;
&lt;p&gt;烧录完成之后，如果你按照树莓派官网的教程进行操作，肯定都行不通，因为树莓派的官方操作系统 &lt;code&gt;Raspberry Pi OS&lt;/code&gt; 和 &lt;code&gt;Ubuntu For Raspberry&lt;/code&gt; 上面的网络配置方式完全不一样。&lt;/p&gt;
&lt;h2 id=&quot;ubuntu&quot; tabindex=&quot;-1&quot;&gt;安装了 ubuntu 的树莓派怎么配置网络？&lt;/h2&gt;
&lt;p&gt;打开你烧录好的 &lt;code&gt;SD&lt;/code&gt; 卡&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;network-config&lt;/code&gt; 文件&lt;/p&gt;
&lt;p&gt;写入如下配置：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;wifis:
  wlan0:
  dhcp4: true
  optional: true
  access-points:
    &amp;lt;wifi network name&amp;gt;:
      password: &amp;quot;&amp;lt;wifi password&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果是企业网络：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;wifis:
  wlan0:
  dhcp4: true
  optional: true
  access-points:
        &amp;lt;wifi network name&amp;gt;:
          auth:
            key-management: eap
            method: peap
            identity: &amp;quot;wudanyang&amp;quot;
            password: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://netplan.io/examples/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;配置文件的格式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改完之后，把 &lt;code&gt;SD&lt;/code&gt; 卡从电脑上弹出，然后插到树莓派里。&lt;/p&gt;
&lt;p&gt;不过，&lt;strong&gt;重启之后，你可能还是无法连接到网络&lt;/strong&gt;。可以看下&lt;a href=&quot;https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#3-wifi-or-ethernet&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: During the first boot, your Raspberry Pi will try to connect to this network. It will fail the first time around. Simply reboot &lt;code&gt;sudo reboot&lt;/code&gt; and it will work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;引用&lt;code&gt;ubuntu&lt;/code&gt;官网的一段话，第一次会失败，直接重启，&lt;strong&gt;第二次就能连上了&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;开启网络之后，如何登录树莓派？&quot; tabindex=&quot;-1&quot;&gt;开启网络之后，如何登录树莓派？&lt;/h2&gt;
&lt;p&gt;安装好之后默认用户名和密码都是 &lt;code&gt;ubuntu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh ubuntu@&amp;lt;raspberry ip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ip 地址的获取这里列举几种方法，不详细介绍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;自己的路由器&lt;/strong&gt;：登录后台查看分配的 ip&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;局域网扫描&lt;/strong&gt;（局域网机器不多的情况下）：
&lt;ol&gt;
&lt;li&gt;下载个局域网扫描工具，如果局域网机器不多，会看到一个制造商为树莓派的 ip&lt;/li&gt;
&lt;li&gt;使用命令行 &lt;code&gt;arp -a &lt;/code&gt; 挨个试一下&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ubuntu&lt;/code&gt; 启动之后会使用 &lt;code&gt;avahi&lt;/code&gt; 服务通过 &lt;a href=&quot;https://baike.baidu.com/item/mdns&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;mdns&lt;/a&gt; 协议在局域网注册一个域名 &lt;code&gt;ubuntu.local&lt;/code&gt;，所以你可以这样登录 &lt;code&gt;ssh ubuntu@ubuntu.local&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/software/operating-systems/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;树莓派支持的操作系统&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/software/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;树莓派操作系统烧录软件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;无屏幕和键盘配置树莓派WiFi和SSH&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/mdns&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;百度百科-mdns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/lonerpaul/p/11054419.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Mac通过网线直连控制树莓派 - lonerpaul - 博客园&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/linux/树莓派/ubuntu 树莓派启动时配置网络/" />
        </entry>
        <entry>
            <title>
                mac-合上盖子不断网
                
            </title>
            <updated>2024-02-01T07:20:12.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/linux/mac-合上盖子不断网/</id>
            <content type="html">
                &lt;p&gt;将电池的设置 【唤醒以供网络访问】改成【始终】就会生效了&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020230203154729.png&quot; alt=&quot;Pasted image 20230203154729.png&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/linux/mac-合上盖子不断网/" />
        </entry>
        <entry>
            <title>
                linux-man命令使用
                
            </title>
            <updated>2024-01-31T05:28:40.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/linux/linux-man命令使用/</id>
            <content type="html">
                &lt;h1 id=&quot;内容&quot; tabindex=&quot;-1&quot;&gt;内容&lt;/h1&gt;
&lt;p&gt;1 - commands（普通的命令）&lt;br /&gt;
2 - system calls（系统调用）&lt;/p&gt;
&lt;p&gt;3 - library calls（库函数）&lt;br /&gt;
4 - special files（特殊文件：/dev下设备文件）&lt;br /&gt;
5 - file formats and convertions（文件格式）&lt;/p&gt;
&lt;p&gt;6 - games for linux（游戏和娱乐）&lt;br /&gt;
7 - macro packages and conventions（杂项）&lt;br /&gt;
8 - system management commands（管理员命令）&lt;br /&gt;
9 - 其他（Linux特定， 用来存放内核例行程序的文档）&lt;/p&gt;
&lt;p&gt;可使用 man man 进入此页面&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/zhang_chou_chou/article/details/83589224&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://blog.csdn.net/zhang_chou_chou/article/details/83589224&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://man7.org/linux/man-pages/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;在线 man 手册&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/linux/linux-man命令使用/" />
        </entry>
        <entry>
            <title>
                如何查看 nginx 的rewrite记录
                
            </title>
            <updated>2024-01-31T05:26:28.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/c/nginx/如何查看 nginx 的rewrite记录/</id>
            <content type="html">
                &lt;h1 id=&quot;nginx-rewrite&quot; tabindex=&quot;-1&quot;&gt;如何调试nginx的rewrite规则？&lt;/h1&gt;
&lt;p&gt;设置 &lt;code&gt;rewrite_log on;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;并且将&lt;code&gt;error_log&lt;/code&gt; 的报错等级改成 &lt;code&gt;notice&lt;/code&gt;;&lt;/p&gt;
&lt;p&gt;官网对 &lt;code&gt;rewrite_log&lt;/code&gt; 的解释：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-plain&quot;&gt;Syntax:	rewrite_log on | off;
Default:	
rewrite_log off;
Context:	http, server, location, if
Enables or disables logging of ngx_http_rewrite_module module directives processing results into the error_log at the notice level.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，这个指令只能在 &lt;code&gt;http&lt;/code&gt; &lt;code&gt;server&lt;/code&gt; &lt;code&gt;location&lt;/code&gt; &lt;code&gt;if&lt;/code&gt; 配置指令中使用，日志等级是 &lt;code&gt;notice&lt;/code&gt; 写入到 &lt;code&gt;error_log&lt;/code&gt; 配置的文件中。&lt;/p&gt;
&lt;h1 id=&quot;示例&quot; tabindex=&quot;-1&quot;&gt;示例&lt;/h1&gt;
&lt;p&gt;url： &lt;code&gt;/q?someparams&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;2021/04/22 18:21:28 [notice] 18131#0: *102982 &amp;quot;^/+m/question(.*)?qid=&#92;d+(.*)?$&amp;quot; does not match ...
... 中间省略一些日志
2021/04/22 18:21:28 [notice] 18131#0: *102982 &amp;quot;^/+question/(&#92;w+.*?)$&amp;quot; does not match ...
2021/04/22 18:21:28 [notice] 18131#0: *102982 &amp;quot;^/+q&#92;?(.*)?tn=nsatom_qb_main(.*)?$&amp;quot; matches ...
2021/04/22 18:21:28 [notice] 18131#0: *102982 &amp;quot;^/+q&amp;quot; matches ...
2021/04/22 18:21:28 [notice] 18131#0: *102982 rewritten data: &amp;quot;/q/q/q/q/q&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从上面的日志中可以看出，当触发了重写规则时，会有关键字 &lt;code&gt;matches&lt;/code&gt; 否则会有 &lt;code&gt;does not match&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;最终重写完成之后，访问的地址会有标记：&lt;code&gt;rewritten data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里就是 &lt;code&gt;/q/q/q/q/q&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://serverfault.com/questions/333048/best-way-to-debug-nginx-rewrite-rules-in-config-file&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;best way to debug nginx rewrite rules in config file?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_rewrite_module.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;nginx官方文档：Module ngx_http_rewrite_module&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/c/nginx/如何查看 nginx 的rewrite记录/" />
        </entry>
        <entry>
            <title>
                vscode 调试nginx代码
                
            </title>
            <updated>2024-01-31T05:28:18.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/c/nginx/vscode 调试nginx代码/</id>
            <content type="html">
                &lt;p&gt;&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#output&quot;&gt;#output&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;内容&quot; tabindex=&quot;-1&quot;&gt;内容&lt;/h1&gt;
&lt;h2 id=&quot;auto-cc-conf&quot; tabindex=&quot;-1&quot;&gt;修改 auto/cc/conf&lt;/h2&gt;
&lt;p&gt;ngx_compile_opt 中添加 -g&lt;br /&gt;
修改后如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ngx_compile_opt=&amp;quot;-c -g&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://wudanyang6.github.io/100%20Programmer/c/nginx/vscode%20%E8%B0%83%E8%AF%95nginx%E4%BB%A3%E7%A0%81/#gcc-g&quot;&gt;&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#gcc&quot;&gt;#gcc&lt;/a&gt; -g 的作用&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;and-amp-and-amp&quot; tabindex=&quot;-1&quot;&gt;编译 &amp;amp; 安装 &amp;amp; 运行&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# prefix 是想要安装到的目录
auto/configure --prefix=/home/ubuntu/mydisk/var/nginx-debug-1

# 编译安装
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;修改配置&quot; tabindex=&quot;-1&quot;&gt;修改配置&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vim /home/ubuntu/mydisk/var/nginx-debug-1/conf/nginx.conf&lt;/code&gt;&lt;br /&gt;
将监听端口号改成 &lt;code&gt;8080&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;worker_processes&lt;/code&gt; 改成 1 (方便调试)&lt;/p&gt;
&lt;h3 id=&quot;nginx&quot; tabindex=&quot;-1&quot;&gt;启动 nginx&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/home/ubuntu/mydisk/var/nginx-debug-1/sbin/nginx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;nginx 的进程：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ps aux | grep nginx
ubuntu     17093  0.0  0.0   4184   372 ?        Ss   Mar30   0:00 nginx: master process /home/ubuntu/mydisk/var/nginx-debug-1/sbin/nginx
ubuntu     17094  0.0  0.0   4620  2316 ?        S    Mar30   0:00 nginx: worker process
ubuntu     46072  0.0  0.0   7692   648 pts/0    S+   11:21   0:00 grep --color=auto nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;vscode&quot; tabindex=&quot;-1&quot;&gt;配置 vscode 调试&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    &amp;quot;version&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;configurations&amp;quot;: [
        {
            &amp;quot;name&amp;quot;: &amp;quot;debug master&amp;quot;,
            &amp;quot;type&amp;quot;: &amp;quot;cppdbg&amp;quot;,
            &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;,
            &amp;quot;program&amp;quot;: &amp;quot;/home/ubuntu/mydisk/var/nginx-debug-1/sbin/nginx&amp;quot;,
            &amp;quot;args&amp;quot;: [],
            &amp;quot;stopAtEntry&amp;quot;: true,
            &amp;quot;cwd&amp;quot;: &amp;quot;${workspaceFolder}&amp;quot;,
            &amp;quot;environment&amp;quot;: [],
            &amp;quot;externalConsole&amp;quot;: false,
            &amp;quot;MIMode&amp;quot;: &amp;quot;gdb&amp;quot;,
            &amp;quot;setupCommands&amp;quot;: [
                {
                    &amp;quot;description&amp;quot;: &amp;quot;为 gdb 启用整齐打印&amp;quot;,
                    &amp;quot;text&amp;quot;: &amp;quot;-enable-pretty-printing&amp;quot;,
                    &amp;quot;ignoreFailures&amp;quot;: true
                }
            ]
        },
        {
            &amp;quot;name&amp;quot;: &amp;quot;debug worker&amp;quot;,
            &amp;quot;type&amp;quot;: &amp;quot;cppdbg&amp;quot;,
            &amp;quot;request&amp;quot;: &amp;quot;attach&amp;quot;,
            &amp;quot;program&amp;quot;: &amp;quot;/home/ubuntu/mydisk/var/nginx-debug-1/sbin/nginx&amp;quot;,
            &amp;quot;processId&amp;quot;: 17094,
            &amp;quot;MIMode&amp;quot;: &amp;quot;gdb&amp;quot;,
            &amp;quot;setupCommands&amp;quot;: [
                {
                    &amp;quot;description&amp;quot;: &amp;quot;为 gdb 启用整齐打印&amp;quot;,
                    &amp;quot;text&amp;quot;: &amp;quot;-enable-pretty-printing&amp;quot;,
                    &amp;quot;ignoreFailures&amp;quot;: true
                }
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 worker 上调试需要改成 attach 的形式，并且使用了一次 attach 之后，就不能使用 strace -p 17094 查看系统调用了&lt;/p&gt;
&lt;p&gt;然后就可以打断点，进行单步调试了&lt;/p&gt;
&lt;h1 id=&quot;参考&quot; tabindex=&quot;-1&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/51b726b56e2f&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Mac上用Visual Studio Code调试Nginx&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;gcc-g&quot; tabindex=&quot;-1&quot;&gt;gcc -g 的作用&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/w3cnote/gcc-parameter-detail.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;GCC 参数详解-runoob&lt;/a&gt;&lt;br /&gt;
在编译的时候会产生调试信息&lt;/p&gt;
&lt;h2 id=&quot;kernel-yama-ptrace-scope&quot; tabindex=&quot;-1&quot;&gt;kernel.yama.ptrace_scope&lt;/h2&gt;
&lt;p&gt;sysctl -a 查看内核参数&lt;br /&gt;
kernel.yama.ptrace_scope&lt;br /&gt;
&lt;a href=&quot;https://www.kernel.org/doc/Documentation/security/Yama.txt&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://www.kernel.org/doc/Documentation/security/Yama.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sudo vim /etc/sysctl.d/10-ptrace.conf&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yihuajack/article/details/107151801&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;VSCode调试出现无法打开glibc库的“raise.c“或“abort.c“等文件的错误&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;sudo-strace&quot; tabindex=&quot;-1&quot;&gt;sudo strace 报 操作不被允许&lt;/h2&gt;
&lt;p&gt;sudo strace -p 17094&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;strace: Could not attach to process. If your uid matches the uid of the target process, check the setting of /proc/sys/kernel/yama/ptrace_scope, or try again as the root user. For more details, see /etc/sysctl.d/10-ptrace.conf: Operation not permitted
strace: attach: ptrace(PTRACE_SEIZE, 17094): Operation not permitted
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/19215177/how-to-solve-ptrace-operation-not-permitted-when-trying-to-attach-gdb-to-a-pro&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://stackoverflow.com/questions/19215177/how-to-solve-ptrace-operation-not-permitted-when-trying-to-attach-gdb-to-a-pro&lt;/a&gt;&lt;br /&gt;
Maybe someone has attached this process with gdb.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ps -ef | grep gdb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;can&#39;t gdb attach the same process twice.&lt;/strong&gt;&lt;br /&gt;
将 vscode 中的 调试关掉，就可以使用 strace 了&lt;br /&gt;
如下图，可以看到，子进程停在了 epoll_pwait 系统调用上了&lt;br /&gt;
&lt;img src=&quot;https://wudanyang6.github.io/img/user/attachs/Pasted%20image%2020210330203413.png&quot; alt=&quot;attachs/Pasted image 20210330203413.png&quot; /&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/c/nginx/vscode 调试nginx代码/" />
        </entry>
        <entry>
            <title>
                nginx 进程模型-整体架构
                
            </title>
            <updated>2024-01-31T05:28:34.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/c/nginx/nginx 进程模型-整体架构/</id>
            <content type="html">
                &lt;h1 id=&quot;nginx&quot; tabindex=&quot;-1&quot;&gt;nginx 进程模型-整体架构&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/100%20Programmer/c/nginx/713751-20221106220927618-2090658482.png&quot; alt=&quot;713751-20221106220927618-2090658482.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;从网上找了一个非常好的图片，从图中可以看到很多东西&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Nginx&lt;/code&gt; 会生成多个进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;worker&lt;/code&gt; 使用了 &lt;code&gt;io&lt;/code&gt; 多路复用的事件驱动框架&lt;/li&gt;
&lt;li&gt;&lt;code&gt;worker&lt;/code&gt; 内部有很多模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;worker&lt;/code&gt; 处理磁盘 &lt;code&gt;I/O&lt;/code&gt; 时，使用了标准 &lt;code&gt;I/O&lt;/code&gt; ， &lt;code&gt;sendfile&lt;/code&gt; ， &lt;code&gt;AIO&lt;/code&gt; ，&lt;code&gt;mmap&lt;/code&gt; 等 &lt;code&gt;I/O&lt;/code&gt; 技术&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache loader&lt;/code&gt; 和 &lt;code&gt;Cache manager&lt;/code&gt; 操作 proxy cache&lt;/li&gt;
&lt;li&gt;后端支持多种基于 &lt;code&gt;tcp&lt;/code&gt; 的网络协议&lt;/li&gt;
&lt;/ol&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/c/nginx/nginx 进程模型-整体架构/" />
        </entry>
        <entry>
            <title>
                epoll的边缘触发和水平触发
                
            </title>
            <updated>2024-01-31T05:28:24.000Z</updated>
            <id>https://wudanyang6.github.io//100 Programmer/c/nginx/epoll的边缘触发和水平触发/</id>
            <content type="html">
                &lt;h1 id=&quot;epoll&quot; tabindex=&quot;-1&quot;&gt;epoll的边缘触发和水平触发&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;epoll&lt;/code&gt; 是 Linux 下用于处理大量文件描述符的高效 I/O 多路复用机制。在 &lt;code&gt;epoll&lt;/code&gt; 中，有两种触发模式：水平触发（Level-Triggered，简称 LT）和边缘触发（Edge-Triggered，简称 ET）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;水平触发（LT，Level-Triggered）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;当文件描述符就绪时，&lt;code&gt;epoll_wait&lt;/code&gt; 将立即返回。&lt;/li&gt;
&lt;li&gt;如果文件描述符的状态发生变化，&lt;code&gt;epoll_wait&lt;/code&gt; 会再次通知应用程序。&lt;/li&gt;
&lt;li&gt;这种模式下，如果文件描述符有数据可读或可写，&lt;code&gt;epoll_wait&lt;/code&gt; 将不停地返回通知，直到应用程序处理完数据或者阻塞。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边缘触发（ET，Edge-Triggered）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;当文件描述符就绪时，&lt;code&gt;epoll_wait&lt;/code&gt; 只会通知一次，直到应用程序处理完数据并清空了文件描述符的缓冲区。&lt;/li&gt;
&lt;li&gt;如果文件描述符的状态没有变化，&lt;code&gt;epoll_wait&lt;/code&gt; 不会重复通知应用程序。&lt;/li&gt;
&lt;li&gt;这种模式下，应用程序需要注意，在一个事件通知之后，要一直读或写，直到发生 &lt;code&gt;EAGAIN&lt;/code&gt; 或 &lt;code&gt;EWOULDBLOCK&lt;/code&gt; 错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为什么epoll这里要叫做边缘触发和水平触发呢？&lt;/p&gt;
&lt;p&gt;这源于通信&lt;strong&gt;数字信号处理领域&lt;/strong&gt;的术语，边缘和水平通常用于描述信号的特性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;边缘触发（Edge-Triggered）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&amp;quot;边缘&amp;quot; 指的是信号的变化边缘，即信号从一个状态变为另一个状态的瞬间。&lt;/li&gt;
&lt;li&gt;在数字信号处理中，边缘通常用来表示信号的上升沿或下降沿，即信号从低电平到高电平或从高电平到低电平的瞬间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;水平触发（Level-Triggered）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&amp;quot;水平&amp;quot; 指的是信号的水平状态，即信号所处的电平状态。&lt;/li&gt;
&lt;li&gt;在数字信号处理中，水平触发通常用来描述信号保持在某个电平的状态，而不关心信号的变化瞬间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://wudanyang6.github.io/img/user/card/92310.png&quot; alt=&quot;92310.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://electronics.stackexchange.com/a/21891&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://electronics.stackexchange.com/a/21891&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://wudanyang6.github.io//100 Programmer/c/nginx/epoll的边缘触发和水平触发/" />
        </entry>
</feed>
