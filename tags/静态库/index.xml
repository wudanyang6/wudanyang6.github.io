<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>静态库 on 吴丹阳的站点</title>
    <link>https://wudanyang6.github.io/tags/%E9%9D%99%E6%80%81%E5%BA%93/</link>
    <description>Recent content in 静态库 on 吴丹阳的站点</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 08 Apr 2022 22:53:28 +0800</lastBuildDate><atom:link href="https://wudanyang6.github.io/tags/%E9%9D%99%E6%80%81%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>制作静态库</title>
      <link>https://wudanyang6.github.io/post/c/%E5%88%B6%E4%BD%9C%E9%9D%99%E6%80%81%E5%BA%93/</link>
      <pubDate>Fri, 08 Apr 2022 22:53:28 +0800</pubDate>
      
      <guid>https://wudanyang6.github.io/post/c/%E5%88%B6%E4%BD%9C%E9%9D%99%E6%80%81%E5%BA%93/</guid>
      <description>这里所说的静态库与动态库是什么呢？
一般来说是指可以复用的代码。之前使用 PHP 或者 Go 的时候，就没有静态库或者动态库的概念。
在 PHP 中，代码复用一般会写到一个单独的文件中，在使用的时候 include 进来直接调用即可，PHP 的解释程序会加载所有文件解析。
Go 语言虽然也可以导出 c 的静态库与动态库，但是一般我们会直接将依赖的包 import 进来后 go get 一下，下载到本地随着 go build 生成一个可执行的二进制文件。
c 语言的静态库是什么呢？
什么是静态库 静态库是在编译链接阶段会随着 main 函数一起编译进二进制包的一种库。
预处理 &amp;gt; 编译 &amp;gt; 汇编 &amp;gt; 【链接】 👆 如何制作静态库 比如，我写了个函数，希望以后能复用：
// add.c
int add(int a, int b) { return a + b; } 执行命令
# 先生成 .o 文件 gcc -c add.c -o add.o # 将 .o 文件打包成 .a 文件 ar rcs add.</description>
    </item>
    
  </channel>
</rss>
